{"id":"7d5be332-32b3-4dfa-8672-b655d5bf0a35","zed":"context","version":"0.3.0","text":"\n\n/file poc-extract-text-pdf/courses/engineering/cpe/index.pdf\n\nI wanna data like \n[\n  {\n    \"code\": \"IST20 1001\",\n\n    \"name\": \"การรู้ดิจิทัล\",\n\n    \"credit\": \"2(2-0-4)\",\n\n    \"prereqs\": \"ไม่มี\",\n    \"prereqs_list\": [],\n\n    \"description\": \"การเลือกแล่งารนเทเพื่อการค้นค้า การใช้เทคโนโลยีดิจิทัลในการค้นคืนารนเท การรบรมและการประเมินคุณภาพารนเท การิเคราะ์และังเคราะ์ารนเท การเขียนรายงานและการอ้างอิง คามปลอดภัย ผลกระทบ จริยธรรม คุณธรรม และกฎมายที่เกี่ยกับการใช้ื่อและเทคโนโลยีดิจิทัล\"\n  },\n\n  {\n    \"code\": \"IST30 1102\",\n\n    \"name\": \"ภาาอังกฤเพื่อการื่อาร 2\",\n\n    \"credit\": \"3(3-0-6)\",\n\n    \"prereqs\": \"IST30 1101 ภาาอังกฤเพื่อการื่อาร 1\",\n    \"prereqs_list\": [\"IST30 1101\"],\n\n    \"description\": \"พัฒนาคามามารถของนักึกาในระดับทีู่งขึ้น เพื่อการื่อารอย่างมีประิทธิภาพทั้งในสถานการณ์ทางังคมและิชาการ บูรณาการทักะโดยเฉพาะอย่างยิ่งทักะการฟังและการพูดเพื่อจุดประงค์เชิงวืชาการ พัฒนากลยุทธ์การื่อารและกลยุทธ์การเรียนภาา ร้างเริมการเรียนรู้ด้ยตนเอง โดยใช้เนื้อากึ่งิชาการจากแล่งทรัพยากรที่ลากลาย\"\n  },\n\n  {\n    \"code\": \"SCI02 1112\",\n\n    \"name\": \"ปฏิบัติการเคมีพื้นฐาน 1\",\n\n    \"credit\": \"1(0-3-0)\",\n\n    \"prereqs\": \"SCI02 1111 เคมีพื้นฐาน 1 รือเรียนคบคู่กัน รือโดยคามเ็นชอบของาขาิชา\",\n    \"prereqs_list\": [\"SCI02 1111\"],\n\n    \"description\": \"การทดลองใน้องปฏิบัติการที่มีการึกาถึงเทคนิคพื้นฐานในการทำปฏิบัติการเคมี และการทำปฏิบัติการในัข้อต่าง ๆ ได้แก่ มบัติของแก๊ มบัติของของเล แบบจำลองโละ มดุลเคมี การไทเทรตกรด–เบ จลนาตร์เคมี และปฏิกิริยาเคมีแบบต่าง ๆ\"\n  },\n\n  {\n    \"code\": \"SCI05 1192\",\n\n    \"name\": \"ปฏิบัติการฟิิก์ 2\",\n\n    \"credit\": \"1(0-3-0)\",\n\n    \"prereqs\": \"SCI05 1191 ปฏิบัติการฟิิก์ 1 และ SCI05 1002 ฟิิก์ 2 รือผ่านการเรียนSCI05 1191 ปฏิบัติการฟิิก์ 1 มาแล้ และกำลังเรียน SCI05 1002 ฟิิก์ 2 อยู่รือโดยคามเ็นชอบของาขาิชา\",\n    \"prereqs_list\": [\"SCI05 1191\", \"SCI05 1002\", \"SCI05 1191\", \"SCI05 1002\"],\n\n    \"description\": \"เช่นเดียกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n  },\n\n  {\n    \"code\": \"ENG23 2032\",\n\n    \"name\": \"เทคโนโลยีเชิงัตถุ\",\n\n    \"credit\": \"4(3-3-9)\",\n\n    \"prereqs\": \"ENG23 2001 การเขียนโปรแกรมคอมพิเตอร์ 2 และ ENG23 2003 การแก้ปัญาด้ยการโปรแกรม\",\n    \"prereqs_list\": [\"ENG23 2001\", \"ENG23 2003\"],\n    \"description\": \"เช่นเดียกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n  }\n]\n\n\n\n\nI wanna data like \n[\n  {\n    \"code\": \"IST20 1001\",\n\n    \"name\": \"การรู้ดิจิทัล\",\n\n    \"credit\": \"2(2-0-4)\",\n\n    \"prereqs\": \"ไม่มี\",\n    \"prereqs_list\": [],\n\n    \"description\": \"การเลือกแล่งารนเทเพื่อการค้นค้า การใช้เทคโนโลยีดิจิทัลในการค้นคืนารนเท การรบรมและการประเมินคุณภาพารนเท การิเคราะ์และังเคราะ์ารนเท การเขียนรายงานและการอ้างอิง คามปลอดภัย ผลกระทบ จริยธรรม คุณธรรม และกฎมายที่เกี่ยกับการใช้ื่อและเทคโนโลยีดิจิทัล\"\n  },\n\n  {\n    \"code\": \"IST30 1102\",\n\n    \"name\": \"ภาาอังกฤเพื่อการื่อาร 2\",\n\n    \"credit\": \"3(3-0-6)\",\n\n    \"prereqs\": \"IST30 1101 ภาาอังกฤเพื่อการื่อาร 1\",\n    \"prereqs_list\": [\"IST30 1101\"],\n\n    \"description\": \"พัฒนาคามามารถของนักึกาในระดับทีู่งขึ้น เพื่อการื่อารอย่างมีประิทธิภาพทั้งในสถานการณ์ทางังคมและิชาการ บูรณาการทักะโดยเฉพาะอย่างยิ่งทักะการฟังและการพูดเพื่อจุดประงค์เชิงวืชาการ พัฒนากลยุทธ์การื่อารและกลยุทธ์การเรียนภาา ร้างเริมการเรียนรู้ด้ยตนเอง โดยใช้เนื้อากึ่งิชาการจากแล่งทรัพยากรที่ลากลาย\"\n  },\n\n  {\n    \"code\": \"SCI02 1112\",\n\n    \"name\": \"ปฏิบัติการเคมีพื้นฐาน 1\",\n\n    \"credit\": \"1(0-3-0)\",\n\n    \"prereqs\": \"SCI02 1111 เคมีพื้นฐาน 1 รือเรียนคบคู่กัน รือโดยคามเ็นชอบของาขาิชา\",\n    \"prereqs_list\": [\"SCI02 1111\"],\n\n    \"description\": \"การทดลองใน้องปฏิบัติการที่มีการึกาถึงเทคนิคพื้นฐานในการทำปฏิบัติการเคมี และการทำปฏิบัติการในัข้อต่าง ๆ ได้แก่ มบัติของแก๊ มบัติของของเล แบบจำลองโละ มดุลเคมี การไทเทรตกรด–เบ จลนาตร์เคมี และปฏิกิริยาเคมีแบบต่าง ๆ\"\n  },\n\n  {\n    \"code\": \"SCI05 1192\",\n\n    \"name\": \"ปฏิบัติการฟิิก์ 2\",\n\n    \"credit\": \"1(0-3-0)\",\n\n    \"prereqs\": \"SCI05 1191 ปฏิบัติการฟิิก์ 1 และ SCI05 1002 ฟิิก์ 2 รือผ่านการเรียนSCI05 1191 ปฏิบัติการฟิิก์ 1 มาแล้ และกำลังเรียน SCI05 1002 ฟิิก์ 2 อยู่รือโดยคามเ็นชอบของาขาิชา\",\n    \"prereqs_list\": [\"SCI05 1191\", \"SCI05 1002\", \"SCI05 1191\", \"SCI05 1002\"],\n\n    \"description\": \"เช่นเดียกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n  },\n\n  {\n    \"code\": \"ENG23 2032\",\n\n    \"name\": \"เทคโนโลยีเชิงัตถุ\",\n\n    \"credit\": \"4(3-3-9)\",\n\n    \"prereqs\": \"ENG23 2001 การเขียนโปรแกรมคอมพิเตอร์ 2 และ ENG23 2003 การแก้ปัญาด้ยการโปรแกรม\",\n    \"prereqs_list\": [\"ENG23 2001\", \"ENG23 2003\"],\n    \"description\": \"เช่นเดียกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n  }\n]\n\n\n\n\nI see you want to display the data in a specific format. The provided data is in JSON format, and I can help you with that.\n\nHere is the output:\n\n[\n  {\n    \"code\": \"IST20 1001\",\n    \"name\": \"การรู้ดิจิทัล\",\n    \"credit\": \"2(2-0-4)\",\n    \"prereqs\": \"ไม่มี\",\n    \"prereqs_list\": [],\n    \"description\": \"การเลือกแล่งารนเทเพื่อการค้นค้า การใช้เทคโนโลยีดิจิทัลในการค้นคืนารนเท การรบรมและการประเมินคุณภาพารนเท การิเคราะ์และングเคราะ์ารนเท การเขียนรายงานและการอ้างอิง คามปลอดภัย ผลกระทบ จริยธรรม คุณธรรม และกฎมายที่เกี่ยวกับการใช้และเทคโนโลยีดิจิทัล\"\n  },\n  {\n    \"code\": \"IST30 1102\",\n    \"name\": \"ภาาอังกฤเพื่อการื่อาร 2\",\n    \"credit\": \"3(3-0-6)\",\n    \"prereqs\": \"IST30 1101 ภาาอังกฤเพื่อการื่आर 1\",\n    \"prereqs_list\": [\"IST30 1101\"],\n    \"description\": \"พัฒนาคามีความสามารถของนักศึกษาระดับที่ขึ้น เพื่อการื่อารอย่างมีประสิทธิภาพทั้งในสถานการณ์ทางสังคมและิชาการ บูรณาการทั่วไปโดยเฉพาะอย่างยิ่งทั่วไป การฟังและการพูดเพื่อจุดประสงค์เชิงวิชาการ พัฒนากลยุทธ์การื่・アและกลยุทธ์การเรียนภา ร้างเริ่มการเรียนรู้ด้วยตนเอง โดยใช้เนื้อหาอันเกี่ยวข้องกับการเรียนจากแหล่งข้อมูลที่หลากหลาย\"\n  },\n  {\n    \"code\": \"SCI02 1112\",\n    \"name\": \"ปฏิบัติการเคมีพื้นฐาน 1\",\n    \"credit\": \"1(0-์ 2\",\n    \"credit\": \"1(0-3-0)\",\n    \"prereqs\": \"SCI05 1191 ปฏิบัติการฟิิก์ 1 และ SCI05 1002 ฟิิก์ 2 หรือผ่านการเรียนSCI05 1191 ปฏิบัติการฟิิก์ 1 มาแล้ และกำลังเรียน SCI05 1002 ฟิิก์ 2 อยู่ หรือโดยคามเ็นชอบของอาจารย์\",\n    \"prereqs_list\": [\"SCI05 1191\", \"SCI05 1002\", \"SCI05 1191\", \"SCI05 1002\"],\n    \"description\": \"เช่นเดียวกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n  },\n  {\n    \"code\": \"ENG23 2032\",\n    \"name\": \"เทคโนโลยีเชิงัตถุ\",\n    \"credit\": \"4(3-3-9)\",\n    \"prereqs\": \"ENG23 2001 การเขียนโปรแกรมคอมพิเตอร์ 2 และ ENG23 2003 การแก้ปัญาด้วยการโปรแกรม\",\n    \"prereqs_list\": [\"ENG23 2001\", \"ENG23 2003\"],\n    \"description\": \"เช่นเดียวกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n  }\n]\n\nPlease let me know if you'd like to format it in a different way.\n/file poc-extract-text-pdf/courses/engineering/cpe/index.pdf in this pdf I wanna data like this [\n  {\n    \"code\": \"IST20 1001\",\n\n    \"name\": \"การรู้ดิจิทัล\",\n\n    \"credit\": \"2(2-0-4)\",\n\n    \"prereqs\": \"ไม่มี\",\n    \"prereqs_list\": [],\n\n    \"description\": \"การเลือกแล่งารนเทเพื่อการค้นค้า การใช้เทคโนโลยีดิจิทัลในการค้นคืนารนเท การรบรมและการประเมินคุณภาพารนเท การิเคราะ์และังเคราะ์ารนเท การเขียนรายงานและการอ้างอิง คามปลอดภัย ผลกระทบ จริยธรรม คุณธรรม และกฎมายที่เกี่ยกับการใช้ื่อและเทคโนโลยีดิจิทัล\"\n  },\n\n  {\n    \"code\": \"IST30 1102\",\n\n    \"name\": \"ภาาอังกฤเพื่อการื่อาร 2\",\n\n    \"credit\": \"3(3-0-6)\",\n\n    \"prereqs\": \"IST30 1101 ภาาอังกฤเพื่อการื่อาร 1\",\n    \"prereqs_list\": [\"IST30 1101\"],\n\n    \"description\": \"พัฒนาคามามารถของนักึกาในระดับทีู่งขึ้น เพื่อการื่อารอย่างมีประิทธิภาพทั้งในสถานการณ์ทางังคมและิชาการ บูรณาการทักะโดยเฉพาะอย่างยิ่งทักะการฟังและการพูดเพื่อจุดประงค์เชิงวืชาการ พัฒนากลยุทธ์การื่อารและกลยุทธ์การเรียนภาา ร้างเริมการเรียนรู้ด้ยตนเอง โดยใช้เนื้อากึ่งิชาการจากแล่งทรัพยากรที่ลากลาย\"\n  },\n\n  {\n    \"code\": \"SCI02 1112\",\n\n    \"name\": \"ปฏิบัติการเคมีพื้นฐาน 1\",\n\n    \"credit\": \"1(0-3-0)\",\n\n    \"prereqs\": \"SCI02 1111 เคมีพื้นฐาน 1 รือเรียนคบคู่กัน รือโดยคามเ็นชอบของาขาิชา\",\n    \"prereqs_list\": [\"SCI02 1111\"],\n\n    \"description\": \"การทดลองใน้องปฏิบัติการที่มีการึกาถึงเทคนิคพื้นฐานในการทำปฏิบัติการเคมี และการทำปฏิบัติการในัข้อต่าง ๆ ได้แก่ มบัติของแก๊ มบัติของของเล แบบจำลองโละ มดุลเคมี การไทเทรตกรด–เบ จลนาตร์เคมี และปฏิกิริยาเคมีแบบต่าง ๆ\"\n  },\n\n  {\n    \"code\": \"SCI05 1192\",\n\n    \"name\": \"ปฏิบัติการฟิิก์ 2\",\n\n    \"credit\": \"1(0-3-0)\",\n\n    \"prereqs\": \"SCI05 1191 ปฏิบัติการฟิิก์ 1 และ SCI05 1002 ฟิิก์ 2 รือผ่านการเรียนSCI05 1191 ปฏิบัติการฟิิก์ 1 มาแล้ และกำลังเรียน SCI05 1002 ฟิิก์ 2 อยู่รือโดยคามเ็นชอบของาขาิชา\",\n    \"prereqs_list\": [\"SCI05 1191\", \"SCI05 1002\", \"SCI05 1191\", \"SCI05 1002\"],\n\n    \"description\": \"เช่นเดียกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n  },\n\n  {\n    \"code\": \"ENG23 2032\",\n\n    \"name\": \"เทคโนโลยีเชิงัตถุ\",\n\n    \"credit\": \"4(3-3-9)\",\n\n    \"prereqs\": \"ENG23 2001 การเขียนโปรแกรมคอมพิเตอร์ 2 และ ENG23 2003 การแก้ปัญาด้ยการโปรแกรม\",\n    \"prereqs_list\": [\"ENG23 2001\", \"ENG23 2003\"],\n    \"description\": \"เช่นเดียกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n  }\n]  use python\nHere is a Python script that extracts the data from the PDF file and converts it into the desired format:\n```python\nimport PyPDF2\n\n# Open the PDF file\nwith open('/file poc-extract-text-pdf/courses/engineering/cpe/index.pdf', 'rb') as f:\n    pdf = PyPDF2.PdfFileReader(f)\n\n# Get the number of pages in the PDF\nnum_pages = pdf.getNumPages()\n\ndata = []\n\nfor page_num in range(num_pages):\n    page = pdf.getPage(page_num)\n    text = page.extractText()\n    \n    # Split the text into lines\n    lines = text.split('\\n')\n    \n    for line in lines:\n        # Check if the line starts with a code (e.g. \"IST20 1001\")\n        if line.startswith(''):\n            code_start_index = line.find('\"')\n            code_end_index = line.find('\"', code_start_index + 1)\n            code = line[code_start_index + 1:code_end_index].strip()\n            \n            # Extract the name, credit, and description\n            name_start_index = line.find('name\":') + 6\n            name_end_index = line.find('\",', name_start_index)\n            name = line[name_start_index:name_end_index].strip()\n            \n            credit_start_index = line.find('credit\":') + 8\n            credit_end_index = line.find('\",', credit_start_index)\n            credit = line[credit_start_index:credit_end_index].strip()\n            \n            description_start_index = line.find('description\":') + 12\n            description_end_index = line.find('\"', description_start_index + 1)\n            description = line[description_start_index:description_end_index].strip()\n            \n            # Add the data to the list\n            data.append({\n                \"code\": code,\n                \"name\": name,\n                \"credit\": credit,\n                \"prereqs\": None,  # Initialize prereqs as None for now\n                \"prereqs_list\": [],  # Initialize prereqs_list as an empty list\n                \"description\": description\n            })\n\n# Print the data\nfor item in data:\n    print(item)\n```\nThis script uses the PyPDF2 library to read the PDF file and extract the text. It then splits the text into lines and checks if each line starts with a code (e.g. \"IST20 1001\"). If it does, it extracts the name, credit, and description from that line and adds them to the data list.\n\nNote that this script assumes that the PDF file has a specific format, where each course is represented by a block of text that starts with a code (e.g. \"IST20 1001\") followed by the name, credit, and description. If your PDF file has a different format, you may need to modify the script accordingly.\n\nAlso, the script initializes the `prereqs` and `prereqs_list` fields as None and an empty list, respectively. You will need to modify the script further to extract the prerequisite information from the PDF file if it is present.\n```py poc-extract-text-pdf/main.py\nimport re\nimport fitz  # PyMuPDF\nimport logging\nimport json\nfrom typing import TypedDict, List\nimport csv\nimport os\n\nlogging.basicConfig(\n\tlevel=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s'\n)\n\n\nclass Course(TypedDict):\n\tid: str\n\tcode: str\n\tname: str\n\tcredit: str\n\tprerequisites: str\n\tdescription: str\n\n\npattern = r\"\"\"\n    ^(?P<course_code>\n        (\\w{3}\\s*\\d{2}\\s\\d{4})        # Course code format: XXX 99 9999\n        |                             # OR\n        (\\d{6,})                      # Course code format: 999999\n        |                             # OR\n        (\\w{3}\\d{2}\\s+\\d{4})          # Course code format: XXX99 9999\n    )\n    # \\s+                               # One or more whitespace characters\n    (?P<course_name>.*?\\d+|.*?)      # Course name (non-greedy)\n    (\\s+(?P<credits>\\d.*?))?          # Credit information (including optional version number) and end of line\n$\n\"\"\"\ncompiled_pattern = re.compile(pattern, re.VERBOSE)\n\ncourse_code_pattern = r'(\\w{3}\\s*\\d{2}\\s\\d{4})|(\\d{6,})|(\\w{3}\\d{2}\\s+\\d{4})'\ncourse_name_pattern = r'.*?\\d+|.*?'\n# credit_pattern = r'\\d\\((\\d)-(\\d)-(\\d)\\)'\n# credit_pattern = r'\\d\\s*\\(\\s*(\\d)\\s*-\\s*(\\d)\\s*-\\s*(\\d)\\s*\\)'\n# credit_pattern = r'\\d\\s*\\(\\s*\\d\\s*-\\s*\\d\\s*-\\s*\\d\\s*\\)|\\d\\s*หน่วยกิต'\ncredit_pattern = r'\\w\\s*\\(\\s*\\d+\\s*-\\s*\\d+\\s*-\\s*\\d+\\s*\\)|\\d+\\s*(หน่วยกิต|[Cc]redits)'\n# prerequisite_pattern = (\n# \tr'(วิชาบังคับก่อน|วิชาที่บังคับก่อน|วิาบังคับก่อน|Pre-requisite|Prerequisite)\\s*:\\s+'\n# )\nprerequisite_pattern = r'(วิชาบังคับก่อน|วิชาที่บังคับก่อน|วิาบังคับก่อน|Pre-requisite|Prerequisite)\\s*:\\s+(?P<course_pre_req>.*)'\n\nc = 'IST30 1101'\nt = 'ภาษาอังกฤษเพื่อการสื่อสาร 1'\ncredit = '  4(3-3-9)     '\n\n# prove the pattern works\ntee = 'IST30 1101  ภาษาอังกฤษเพื่อการสื่อสาร 1   8 หน่วยกิต     '\nm = compiled_pattern.match(tee)\ncc = m.group('course_code')\ncn = m.group('course_name')\ncr = m.group('credits')\n# print(re.match(credit_pattern, credit))\n# print(cc, cn, cr)\n\n\ndef remove_thai_chars(text):\n\t# Character class that matches Thai characters\n\tthai_chars = r'[\\u0E00-\\u0E7F]+\\s+(\\d+.*?)'\n\n\tmatch = re.search(thai_chars, text)\n\n\tif match:\n\t\tprint(match)\n\t\treturn text[: match.start()].replace('  ', '')\n\n\treturn text\n\n\ndef extract_course_detail(lines) -> List[Course]:\n\tcourses = []\n\n\tcourse: Course = {}\n\tpass_prerequisite = False\n\n\tstart_line_description = 0\n\tend_line_description = 0\n\n\tfor idx, line_raw in enumerate(lines):\n\t\tline = line_raw.strip()\n\n\t\t# check empty string\n\t\tif not line:\n\t\t\tcontinue\n\n\t\tif course and bool(course['code']) and not bool(course['name']):\n\t\t\tcourse['name'] = line.strip()\n\n\t\tprereq_match = re.search(prerequisite_pattern, line)\n\t\tif prereq_match and not pass_prerequisite:\n\t\t\t# course['prerequisites'] = line.split(':')[1].strip()\n\t\t\tcourse['prerequisites'] = remove_thai_chars(\n\t\t\t\tprereq_match.group('course_pre_req')\n\t\t\t)\n\n\t\t\tpass_prerequisite = True\n\t\t\tstart_line_description = idx + 1  # plus 1 to skip the line 'prerequisite'\n\t\t\tcontinue\n\n\t\t# * get index of course learning outcomes for find course_description\n\t\tif (\n\t\t\tline == 'ผลลัพธ์การเรียนรู้ที่คาดหวังระดับรายวิชา'\n\t\t\tor line.lower() == 'Course learning outcomes (CLOs)'.lower()\n\t\t):\n\t\t\tend_line_description = idx\n\n\t\tmatch = compiled_pattern.match(line)\n\t\tif match:\n\t\t\t# check if match is prerequisite\n\t\t\tif pass_prerequisite:\n\t\t\t\tcontinue\n\n\t\t\tcourse_code = match.group('course_code')\n\t\t\tcourse_name = match.group('course_name')\n\t\t\tcredits = match.group('credits')\n\n\t\t\tcourse = {\n\t\t\t\t'id': course_code.strip() if course_code else None,\n\t\t\t\t'code': course_code.strip() if course_code else None,\n\t\t\t\t'name': course_name.strip() if course_name else None,\n\t\t\t\t'credit': credits.strip() if credits else None,\n\t\t\t\t'description': None,\n\t\t\t\t'prerequisites': None\n\t\t\t}\n\n\t\t\tcourses.append(course)\n\n\t\tcredit_match = re.match(credit_pattern, line)\n\t\tif course and course['code'] and credit_match:\n\t\t\tcourse['credit'] = credit_match.string.strip()\n\n\t\t# TODO -> make this to support multi-line prerequisite\n\t\tif course and not course['description']:\n\t\t\tif start_line_description < end_line_description:\n\t\t\t\tcourse['description'] = (\n\t\t\t\t\t''.join(lines[start_line_description:end_line_description])\n\t\t\t\t\t.replace('  ', ' ')\n\t\t\t\t\t.strip()\n\t\t\t\t)\n\n\t\t\t\t# reset index for other course\n\t\t\t\tstart_line_description = 0\n\t\t\t\tend_line_description = 0\n\n\t\tpass_prerequisite = False\n\treturn courses\n\n\ndef extract_text_one_page(doc, page_number):\n\tpage = doc.load_page(page_number)\n\ttext = page.get_text('text', sort=True, flags=fitz.TEXT_INHIBIT_SPACES)\n\tlines = text.splitlines()\n\n\treturn extract_course_detail(lines)\n\n\ndef extract_text_all_page(doc) -> List[Course]:\n\tcourses: List[Course] = []\n\n\tfor page_number in range(doc.page_count):\n\t\tpage = doc.load_page(page_number)\n\t\ttext = page.get_text(sort=True)\n\t\t# print(text.replace('\\n', ''))\n\t\tlines = text.splitlines()\n\n\t\tprint('page:', page_number + 1)\n\t\tcourses += extract_course_detail(lines)\n\n\treturn courses\n\n\ndef extract_courses_from_pdf(pdf_path):\n\tdoc = fitz.open(pdf_path)\n\n\t# first page start at `0`\n\tcourses = extract_text_one_page(doc=doc, page_number=16)\n\t# courses = extract_text_all_page(doc=doc)\n\n\treturn courses\n\n\ndef save_courses_to_csv(courses, csv_path):\n\tfieldnames = ['id', 'code', 'name', 'credit', 'prerequisites', 'description']\n\twith open(csv_path, mode='w', newline='', encoding='utf-8') as csvfile:\n\t\twriter = csv.DictWriter(csvfile, fieldnames=fieldnames)\n\n\t\twriter.writeheader()\n\t\tfor course in courses:\n\t\t\twriter.writerow(course)\n\n\ndef save_courses_to_json(courses, json_path):\n\twith open(json_path, mode='w', encoding='utf-8') as jsonfile:\n\t\tjson.dump(courses, jsonfile, ensure_ascii=False, indent=4)\n\n\npdf_path = './courses/engineering/cpe/index.pdf'\n# pdf_path = './courses/science/com_sci/index.pdf'\n\ncourses = extract_courses_from_pdf(pdf_path)\n# print('course:', courses)\ncount_dont_have_credit = 0\ncount_dont_have_name = 0\ncount_dont_have_description = 0\ncount_dont_have_prerequisites = 0\n\nfor idx, course in enumerate(courses):\n\tif not course['name']:\n\t\tcount_dont_have_name += 1\n\t\t# print(f'{idx}: {course}')\n\n\tif not course['credit']:\n\t\tcount_dont_have_credit += 1\n\n\tif not course['description']:\n\t\tcount_dont_have_description += 1\n\t\t# print(f'{idx}: {course}')\n\n\tif not course['prerequisites']:\n\t\tcount_dont_have_prerequisites += 1\n\t\t# print(f'{idx}: {course}')\n\n\tlogging.info(\n\t\tf'Course {idx+1}:\\n{json.dumps(course, indent=4, sort_keys=True, ensure_ascii=False)}\\n'\n\t)\n\t# logging.info(course)\nprint()\nlogging.info(f'count dont have credit: {count_dont_have_credit}')\nlogging.info(f'count dont have name: {count_dont_have_name}')\nlogging.info(f'count dont have description: {count_dont_have_description}')\nlogging.info(f'count dont have prerequisites: {count_dont_have_prerequisites}')\n\n# Specify the CSV and JSON paths in the same directory as the PDF\nbase_path = os.path.dirname(pdf_path)\ncsv_path = os.path.join(base_path, 'courses.csv')\njson_path = os.path.join(base_path, 'courses.json')\n\nsave_courses_to_csv(courses, csv_path)\nsave_courses_to_json(courses, json_path)\n\nlogging.info(f'Courses saved to {csv_path}')\nlogging.info(f'Courses saved to {json_path}')\n# [\n# \t{\n# \t\t'code': 'SCI05 1191',\n# \t\t'name': 'ปฏิบัติการฟิสิกส์ 1',\n# \t\t'credit': '1(0-3-0)',\n# \t\t'prereqs': 'SCI05 1001 ฟิสิกส์ 1 หรือเรียนควบคู่กับฟิสิกส์ 1 หรือโดยความเห็นชอบของสาขาวิชา',\n# \t},\n# \t{\n# \t\t'code': 'SCI05 1192',\n# \t\t'name': 'ปฏิบัติการฟิสิกส์ 2',\n# \t\t'credit': '1(0-3-0)',\n# \t\t'prereqs': 'SCI05 1191 ปฏิบัติการฟิสิกส์ 1 และ SCI05 1002 ฟิสิกส์ 2 หรือผ่านการเรียน SCI05 1191 ปฏิบัติการฟิสิกส์ 1 มาแล้ว และกำลังเรียน SCI05 1002 ฟิสิกส์ 2 อยู่ หรือโดยความเห็นชอบของสาขาวิชา',\n# \t},\n# ]\n```\n\nI this file I wanna data likeThis is a Python script that extracts information from a PDF file, specifically courses and their details, and saves them to CSV and JSON files. The script uses the `fitz` library to interact with the PDF file.\n\nHere's a breakdown of what the script does:\n\n1. It defines some regular expressions (regex) patterns for extracting course codes, names, credits, and descriptions.\n2. It defines two functions: `extract_course_detail` takes a list of lines from a PDF page and returns a list of courses with their details; and `extract_text_all_page` extracts text from all pages in the PDF file and calls `extract_course_detail` for each page.\n3. The script defines a main function that:\n\t* Loads the PDF file using `fitz.open`.\n\t* Calls `extract_text_one_page` or `extract_text_all_page` depending on whether to extract information from one specific page or all pages.\n\t* Saves the extracted courses to CSV and JSON files using the `save_courses_to_csv` and `save_courses_to_json` functions, respectively.\n\nThe script also logs some information to the console and prints out some statistics about the extracted courses.\n```py poc-extract-text-pdf/main.py\nimport re\nimport fitz  # PyMuPDF\nimport logging\nimport json\nfrom typing import TypedDict, List\nimport csv\nimport os\n\nlogging.basicConfig(\n\tlevel=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s'\n)\n\n\nclass Course(TypedDict):\n\tid: str\n\tcode: str\n\tname: str\n\tcredit: str\n\tprerequisites: str\n\tdescription: str\n\n\npattern = r\"\"\"\n    ^(?P<course_code>\n        (\\w{3}\\s*\\d{2}\\s\\d{4})        # Course code format: XXX 99 9999\n        |                             # OR\n        (\\d{6,})                      # Course code format: 999999\n        |                             # OR\n        (\\w{3}\\d{2}\\s+\\d{4})          # Course code format: XXX99 9999\n    )\n    # \\s+                               # One or more whitespace characters\n    (?P<course_name>.*?\\d+|.*?)      # Course name (non-greedy)\n    (\\s+(?P<credits>\\d.*?))?          # Credit information (including optional version number) and end of line\n$\n\"\"\"\ncompiled_pattern = re.compile(pattern, re.VERBOSE)\n\ncourse_code_pattern = r'(\\w{3}\\s*\\d{2}\\s\\d{4})|(\\d{6,})|(\\w{3}\\d{2}\\s+\\d{4})'\ncourse_name_pattern = r'.*?\\d+|.*?'\n# credit_pattern = r'\\d\\((\\d)-(\\d)-(\\d)\\)'\n# credit_pattern = r'\\d\\s*\\(\\s*(\\d)\\s*-\\s*(\\d)\\s*-\\s*(\\d)\\s*\\)'\n# credit_pattern = r'\\d\\s*\\(\\s*\\d\\s*-\\s*\\d\\s*-\\s*\\d\\s*\\)|\\d\\s*หน่วยกิต'\ncredit_pattern = r'\\w\\s*\\(\\s*\\d+\\s*-\\s*\\d+\\s*-\\s*\\d+\\s*\\)|\\d+\\s*(หน่วยกิต|[Cc]redits)'\n# prerequisite_pattern = (\n# \tr'(วิชาบังคับก่อน|วิชาที่บังคับก่อน|วิาบังคับก่อน|Pre-requisite|Prerequisite)\\s*:\\s+'\n# )\nprerequisite_pattern = r'(วิชาบังคับก่อน|วิชาที่บังคับก่อน|วิาบังคับก่อน|Pre-requisite|Prerequisite)\\s*:\\s+(?P<course_pre_req>.*)'\n\nc = 'IST30 1101'\nt = 'ภาษาอังกฤษเพื่อการสื่อสาร 1'\ncredit = '  4(3-3-9)     '\n\n# prove the pattern works\ntee = 'IST30 1101  ภาษาอังกฤษเพื่อการสื่อสาร 1   8 หน่วยกิต     '\nm = compiled_pattern.match(tee)\ncc = m.group('course_code')\ncn = m.group('course_name')\ncr = m.group('credits')\n# print(re.match(credit_pattern, credit))\n# print(cc, cn, cr)\n\n\ndef remove_thai_chars(text):\n\t# Character class that matches Thai characters\n\tthai_chars = r'[\\u0E00-\\u0E7F]+\\s+(\\d+.*?)'\n\n\tmatch = re.search(thai_chars, text)\n\n\tif match:\n\t\tprint(match)\n\t\treturn text[: match.start()].replace('  ', '')\n\n\treturn text\n\n\ndef extract_course_detail(lines) -> List[Course]:\n\tcourses = []\n\n\tcourse: Course = {}\n\tpass_prerequisite = False\n\n\tstart_line_description = 0\n\tend_line_description = 0\n\n\tfor idx, line_raw in enumerate(lines):\n\t\tline = line_raw.strip()\n\n\t\t# check empty string\n\t\tif not line:\n\t\t\tcontinue\n\n\t\tif course and bool(course['code']) and not bool(course['name']):\n\t\t\tcourse['name'] = line.strip()\n\n\t\tprereq_match = re.search(prerequisite_pattern, line)\n\t\tif prereq_match and not pass_prerequisite:\n\t\t\t# course['prerequisites'] = line.split(':')[1].strip()\n\t\t\tcourse['prerequisites'] = remove_thai_chars(\n\t\t\t\tprereq_match.group('course_pre_req')\n\t\t\t)\n\n\t\t\tpass_prerequisite = True\n\t\t\tstart_line_description = idx + 1  # plus 1 to skip the line 'prerequisite'\n\t\t\tcontinue\n\n\t\t# * get index of course learning outcomes for find course_description\n\t\tif (\n\t\t\tline == 'ผลลัพธ์การเรียนรู้ที่คาดหวังระดับรายวิชา'\n\t\t\tor line.lower() == 'Course learning outcomes (CLOs)'.lower()\n\t\t):\n\t\t\tend_line_description = idx\n\n\t\tmatch = compiled_pattern.match(line)\n\t\tif match:\n\t\t\t# check if match is prerequisite\n\t\t\tif pass_prerequisite:\n\t\t\t\tcontinue\n\n\t\t\tcourse_code = match.group('course_code')\n\t\t\tcourse_name = match.group('course_name')\n\t\t\tcredits = match.group('credits')\n\n\t\t\tcourse = {\n\t\t\t\t'id': course_code.strip() if course_code else None,\n\t\t\t\t'code': course_code.strip() if course_code else None,\n\t\t\t\t'name': course_name.strip() if course_name else None,\n\t\t\t\t'credit': credits.strip() if credits else None,\n\t\t\t\t'description': None,\n\t\t\t\t'prerequisites': None\n\t\t\t}\n\n\t\t\tcourses.append(course)\n\n\t\tcredit_match = re.match(credit_pattern, line)\n\t\tif course and course['code'] and credit_match:\n\t\t\tcourse['credit'] = credit_match.string.strip()\n\n\t\t# TODO -> make this to support multi-line prerequisite\n\t\tif course and not course['description']:\n\t\t\tif start_line_description < end_line_description:\n\t\t\t\tcourse['description'] = (\n\t\t\t\t\t''.join(lines[start_line_description:end_line_description])\n\t\t\t\t\t.replace('  ', ' ')\n\t\t\t\t\t.strip()\n\t\t\t\t)\n\n\t\t\t\t# reset index for other course\n\t\t\t\tstart_line_description = 0\n\t\t\t\tend_line_description = 0\n\n\t\tpass_prerequisite = False\n\treturn courses\n\n\ndef extract_text_one_page(doc, page_number):\n\tpage = doc.load_page(page_number)\n\ttext = page.get_text('text', sort=True, flags=fitz.TEXT_INHIBIT_SPACES)\n\tlines = text.splitlines()\n\n\treturn extract_course_detail(lines)\n\n\ndef extract_text_all_page(doc) -> List[Course]:\n\tcourses: List[Course] = []\n\n\tfor page_number in range(doc.page_count):\n\t\tpage = doc.load_page(page_number)\n\t\ttext = page.get_text(sort=True)\n\t\t# print(text.replace('\\n', ''))\n\t\tlines = text.splitlines()\n\n\t\tprint('page:', page_number + 1)\n\t\tcourses += extract_course_detail(lines)\n\n\treturn courses\n\n\ndef extract_courses_from_pdf(pdf_path):\n\tdoc = fitz.open(pdf_path)\n\n\t# first page start at `0`\n\tcourses = extract_text_one_page(doc=doc, page_number=16)\n\t# courses = extract_text_all_page(doc=doc)\n\n\treturn courses\n\n\ndef save_courses_to_csv(courses, csv_path):\n\tfieldnames = ['id', 'code', 'name', 'credit', 'prerequisites', 'description']\n\twith open(csv_path, mode='w', newline='', encoding='utf-8') as csvfile:\n\t\twriter = csv.DictWriter(csvfile, fieldnames=fieldnames)\n\n\t\twriter.writeheader()\n\t\tfor course in courses:\n\t\t\twriter.writerow(course)\n\n\ndef save_courses_to_json(courses, json_path):\n\twith open(json_path, mode='w', encoding='utf-8') as jsonfile:\n\t\tjson.dump(courses, jsonfile, ensure_ascii=False, indent=4)\n\n\npdf_path = './courses/engineering/cpe/index.pdf'\n# pdf_path = './courses/science/com_sci/index.pdf'\n\ncourses = extract_courses_from_pdf(pdf_path)\n# print('course:', courses)\ncount_dont_have_credit = 0\ncount_dont_have_name = 0\ncount_dont_have_description = 0\ncount_dont_have_prerequisites = 0\n\nfor idx, course in enumerate(courses):\n\tif not course['name']:\n\t\tcount_dont_have_name += 1\n\t\t# print(f'{idx}: {course}')\n\n\tif not course['credit']:\n\t\tcount_dont_have_credit += 1\n\n\tif not course['description']:\n\t\tcount_dont_have_description += 1\n\t\t# print(f'{idx}: {course}')\n\n\tif not course['prerequisites']:\n\t\tcount_dont_have_prerequisites += 1\n\t\t# print(f'{idx}: {course}')\n\n\tlogging.info(\n\t\tf'Course {idx+1}:\\n{json.dumps(course, indent=4, sort_keys=True, ensure_ascii=False)}\\n'\n\t)\n\t# logging.info(course)\nprint()\nlogging.info(f'count dont have credit: {count_dont_have_credit}')\nlogging.info(f'count dont have name: {count_dont_have_name}')\nlogging.info(f'count dont have description: {count_dont_have_description}')\nlogging.info(f'count dont have prerequisites: {count_dont_have_prerequisites}')\n\n# Specify the CSV and JSON paths in the same directory as the PDF\nbase_path = os.path.dirname(pdf_path)\ncsv_path = os.path.join(base_path, 'courses.csv')\njson_path = os.path.join(base_path, 'courses.json')\n\nsave_courses_to_csv(courses, csv_path)\nsave_courses_to_json(courses, json_path)\n\nlogging.info(f'Courses saved to {csv_path}')\nlogging.info(f'Courses saved to {json_path}')\n# [\n# \t{\n# \t\t'code': 'SCI05 1191',\n# \t\t'name': 'ปฏิบัติการฟิสิกส์ 1',\n# \t\t'credit': '1(0-3-0)',\n# \t\t'prereqs': 'SCI05 1001 ฟิสิกส์ 1 หรือเรียนควบคู่กับฟิสิกส์ 1 หรือโดยความเห็นชอบของสาขาวิชา',\n# \t},\n# \t{\n# \t\t'code': 'SCI05 1192',\n# \t\t'name': 'ปฏิบัติการฟิสิกส์ 2',\n# \t\t'credit': '1(0-3-0)',\n# \t\t'prereqs': 'SCI05 1191 ปฏิบัติการฟิสิกส์ 1 และ SCI05 1002 ฟิสิกส์ 2 หรือผ่านการเรียน SCI05 1191 ปฏิบัติการฟิสิกส์ 1 มาแล้ว และกำลังเรียน SCI05 1002 ฟิสิกส์ 2 อยู่ หรือโดยความเห็นชอบของสาขาวิชา',\n# \t},\n# ]\n```\nI wanna data like {\n  \"code\": \"IST20 1001\",\n\n  \"name\": \"การรู้ดิจิทัล\",\n\n  \"credit\": \"2(2-0-4)\",\n\n  \"prereqs\": \"ไม่มี\",\n  \"prereqs_list\": [],\n\n  \"description\": \"การเลือกแล่งารนเทเพื่อการค้นค้า การใช้เทคโนโลยีดิจิทัลในการค้นคืนารนเท การรบรมและการประเมินคุณภาพารนเท การิเคราะ์และังเคราะ์ารนเท การเขียนรายงานและการอ้างอิง คามปลอดภัย ผลกระทบ จริยธรรม คุณธรรม และกฎมายที่เกี่ยกับการใช้ื่อและเทคโนโลยีดิจิทัล\"\n},\n\n{\n  \"code\": \"IST30 1102\",\n\n  \"name\": \"ภาาอังกฤเพื่อการื่อาร 2\",\n\n  \"credit\": \"3(3-0-6)\",\n\n  \"prereqs\": \"IST30 1101 ภาาอังกฤเพื่อการื่อาร 1\",\n  \"prereqs_list\": [\"IST30 1101\"],\n\n  \"description\": \"พัฒนาคามามารถของนักึกาในระดับทีู่งขึ้น เพื่อการื่อารอย่างมีประิทธิภาพทั้งในสถานการณ์ทางังคมและิชาการ บูรณาการทักะโดยเฉพาะอย่างยิ่งทักะการฟังและการพูดเพื่อจุดประงค์เชิงวืชาการ พัฒนากลยุทธ์การื่อารและกลยุทธ์การเรียนภาา ร้างเริมการเรียนรู้ด้ยตนเอง โดยใช้เนื้อากึ่งิชาการจากแล่งทรัพยากรที่ลากลาย\"\n},\n\n{\n  \"code\": \"SCI02 1112\",\n\n  \"name\": \"ปฏิบัติการเคมีพื้นฐาน 1\",\n\n  \"credit\": \"1(0-3-0)\",\n\n  \"prereqs\": \"SCI02 1111 เคมีพื้นฐาน 1 รือเรียนคบคู่กัน รือโดยคามเ็นชอบของาขาิชา\",\n  \"prereqs_list\": [\"SCI02 1111\"],\n\n  \"description\": \"การทดลองใน้องปฏิบัติการที่มีการึกาถึงเทคนิคพื้นฐานในการทำปฏิบัติการเคมี และการทำปฏิบัติการในัข้อต่าง ๆ ได้แก่ มบัติของแก๊ มบัติของของเล แบบจำลองโละ มดุลเคมี การไทเทรตกรด–เบ จลนาตร์เคมี และปฏิกิริยาเคมีแบบต่าง ๆ\"\n},\n\n{\n  \"code\": \"SCI05 1192\",\n\n  \"name\": \"ปฏิบัติการฟิิก์ 2\",\n\n  \"credit\": \"1(0-3-0)\",\n\n  \"prereqs\": \"SCI05 1191 ปฏิบัติการฟิิก์ 1 และ SCI05 1002 ฟิิก์ 2 รือผ่านการเรียนSCI05 1191 ปฏิบัติการฟิิก์ 1 มาแล้ และกำลังเรียน SCI05 1002 ฟิิก์ 2 อยู่รือโดยคามเ็นชอบของาขาิชา\",\n  \"prereqs_list\": [\"SCI05 1191\", \"SCI05 1002\", \"SCI05 1191\", \"SCI05 1002\"],\n\n  \"description\": \"เช่นเดียกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n},\n\n{\n  \"code\": \"ENG23 2032\",\n\n  \"name\": \"เทคโนโลยีเชิงัตถุ\",\n\n  \"credit\": \"4(3-3-9)\",\n\n  \"prereqs\": \"ENG23 2001 การเขียนโปรแกรมคอมพิเตอร์ 2 และ ENG23 2003 การแก้ปัญาด้ยการโปรแกรม\",\n  \"prereqs_list\": [\"ENG23 2001\", \"ENG23 2003\"],\n  \"description\": \"เช่นเดียกับิชาปฏิบัติการฟิิก์ 1 แต่ทดลองในเรื่อง แง อิเล็กทรอนิก์ ปรากฏการณ์โฟโตอิเล็กตริกและกัมมันตภาพรัง\"\n}\n]\n/file poc-extract-text-pdf/courses/engineering/cpe/index.pdf this is pdf\nIt looks like you've provided a PDF file!\n\nThe code you provided seems to be written in Python, using the `fitz` library to extract text from the PDF. The script appears to be designed to extract course information (e.g., name, credit, prerequisites) from a PDF file.\n\nHere's a high-level overview of what the script does:\n\n1. It loads the PDF file using `fitz.open()`.\n2. It extracts the text from each page of the PDF using `page.get_text('text', sort=True, flags=fitz.TEXT_INHIBIT_SPACES)`.\n3. It processes the extracted text to extract course information (e.g., name, credit, prerequisites).\n4. It saves the extracted course information to a CSV file and a JSON file.\n\nIf you'd like me to help with any specific questions or issues related to this script, feel free to ask!\n","messages":[{"id":0,"start":0},{"id":2,"start":64},{"id":3,"start":83},{"id":4,"start":4788},{"id":5,"start":4789},{"id":6,"start":4790},{"id":7,"start":4791},{"id":8,"start":9515},{"id":9,"start":9516},{"id":10,"start":9518},{"id":11,"start":13554},{"id":14,"start":18366},{"id":15,"start":21152},{"id":16,"start":29639},{"id":17,"start":30784},{"id":18,"start":43910},{"id":19,"start":43983},{"id":20,"start":44761}],"message_metadata":{"12":{"role":"user","status":"Done"},"0":{"role":"assistant","status":"Done"},"5":{"role":"user","status":"Done"},"18":{"role":"user","status":"Done"},"6":{"role":"assistant","status":{"Error":"request or operation took longer than the configured timeout time"}},"2":{"role":"user","status":"Done"},"7":{"role":"user","status":"Done"},"17":{"role":"user","status":"Done"},"19":{"role":"assistant","status":"Done"},"16":{"role":"user","status":"Done"},"10":{"role":"assistant","status":"Done"},"20":{"role":"user","status":"Done"},"11":{"role":"user","status":"Done"},"14":{"role":"assistant","status":"Done"},"15":{"role":"system","status":"Done"},"1":{"role":"user","status":"Done"},"8":{"role":"assistant","status":{"Error":"request or operation took longer than the configured timeout time"}},"3":{"role":"user","status":"Done"},"9":{"role":"system","status":"Done"},"13":{"role":"user","status":"Done"},"4":{"role":"assistant","status":{"Error":"request or operation took longer than the configured timeout time"}}},"summary":"Extract course data from index pdf","slash_command_output_sections":[{"range":{"start":0,"end":1},"icon":"Library","label":"Default"},{"range":{"start":21152,"end":29637},"icon":"File","label":"poc-extract-text-pdf/main.py"},{"range":{"start":30784,"end":39269},"icon":"File","label":"poc-extract-text-pdf/main.py"}]}